[{'author': {'name': 'Andruhon ', 'author_url': 'https://habr.com/en/users/Andruhon/'}, 'topic': ['Open source*'], 'text': ['Since my last post on Gaunt Sloth Assistant, we have achieved a number of things.', "As a reminder, Gaunt Sloth is an open-source CLI AI client, built with TypeScript, distributed via NPM,and it works on Linux, Windows, and Mac. The primary feature is PR and code reviews, and the fact that it is small means you're not going to spend priceless minutes waiting for this tool to install in your workflow. GitHub repo ishttps://github.com/Galvanized-Pukeko/gaunt-sloth-assistant", 'Gaunt Sloth is at version 0.9.2 now, and achievements since the last post are:', 'two new contributors', 'created an example GitHub workflow for PR reviews. We have this workflow in our own repo, and I succeeded in deploying it in a build pipeline at work:https://github.com/Galvanized-Pukeko/gaunt-sloth-assistant/blob/main/.github/workflows/review.yml(pay attention, using AI review in public repo with PRs from strangers may leak your API keys, do your homework)', "added the ability to run tests and lint, so Gaunt Sloth can build a complete feature (we're using it to engineer its own features now. This is helpful as part of testing)", 'improved chat loop (including a retry feature, for when the AI gives you an annoying "overloaded" message)', 'confirmed that it works with local LLMs from Ollama (not all models work. It needs a model with text-generation target and with tool use)', 'Added preset for open router', 'crossed the 500 commits line', 'Plans', "Most of the documentation is in two markdown documents. I still need to find time or contributor to build proper documentation. We're probably going to use typedoc to use combination of generated documentation and markdowns."], 'paper': None}, {'author': {'name': 'YuriPanchul ', 'author_url': 'https://habr.com/en/users/YuriPanchul/'}, 'topic': ['Compilers*', 'FPGA*', 'Programming microcontrollers*', 'Manufacture and development of electronics*', 'CPU'], 'text': ['Here is my take on Verilog-vs-VHDL', 'In the early 1990s many people thought that Verilog was a temporary language and was going away with VHDL standard adoption.', 'For example, Verilog was plagued by race conditions in the form:always @ (posedge clock) a = b;always @ (posedge clock) c = a;You had to use non-blocking assignments or delays in simulation to counteract the fact that the order of always block evaluation is indeterminate. This led to a pre-synthesis-post-synthesis simulation mismatch. At the same time, many people complained that VHDL has different incompatible arithmetic packages (numeric_std and std_logic_arith) and writing something like', 'wire [3:0] a, b;wire [4:0] c = a + b;', 'becomes something like', 'signal a, b : std_logic_vector (3 downto 0);signal c : std_logic_vector (4 downto 0);c <= std_logic_vector (resize (unsigned (a), 5) + resize (unsigned (b), 5))', 'Finally John Cooley, the first blogger of EDA industry (he started his bloghttp://deepchip.comeven before the word "blogger" appeared in the press) decided to make a hackathon in 1997 (at that moment the word "hackathon" was also unknown) to find out who is more productive - Verilog or VHDL engineers.', 'John Cooley published the results in an article', '"The Unexpected Results From A Hardware Design Contest:\xa0 Verilog Won & VHDL Lost? -- You Be The Judge!"', 'https://www.angelfire.com/in/rajesh52/contest.html', 'He found that the Verilog engineers were more productive in his challenge.', 'After that more and more companies started to switch to Verilog, especially when Verilog-2001 and SystemVerilog integrated all the features of VHDL (packages, generate, records/structs etc).', 'In the early 2000s Synopsys developers thought that VHDL was going to die soon. However they continued to maintain VHDL support for die-hard VHDL users like Texas Instruments, IBM and the military. But even the Pentagon eventually back in 2008 allowed contractors to mix VHDL RTL designs with SystemVerilog testbenches (before they used a mix of VHDL and Specman e language).', 'However, VHDL at some moment stopped declining and stabilized. For example PowerVR GPU used in Apple iPhone 1-4 was written in VHDL by the British company Imagination. VHDL is still used but EDA companies give SystemVerilog priority when implementing language support in their tools.'], 'paper': None}, {'author': {'name': 'Andruhon ', 'author_url': 'https://habr.com/en/users/Andruhon/'}, 'topic': ['Open source*', 'Node.JS*'], 'text': ["It's been a while since I last published anything on Habr, about 10 years or so, and today is the day to share my small open-source project.", 'The project, called Gaunt Sloth Assistant, is a CLI AI client built with TypeScript (LangChain.js), distributed via npm, and works on Linux, Windows, and Mac. The user is in full control of the prompts, and forming your own system prompt is encouraged, but it has a default one as well.', 'GitHub:https://github.com/andruhon/gaunt-sloth-assistant', 'NPM:https://www.npmjs.com/package/gaunt-sloth-assistant', "Gaunt Sloth currently has dependencies allowing it to use a simple JSON configuration for VertexAI, Anthropic, Groq, DeepSeek and OpenAI (consequently everyone else who using OpenAI format, e.g. Inception). Hypothetically, it should work with any model supported by LangChain; there's even a package available for Yandex, which I have never tried, but I think it should work if you install the package and provide a JS config. OLLAMA? It might work; I have never tried, but I will appreciate it if someone shares their experience.", 'The Gaunt Sloth can review pull requests and match them with requirements from a Jira or GitHub issue, review local diffs, chat, has access to the filesystem, and can write code to the filesystem.', 'The Gaunt Sloth is a versatile tool with a range of helpful capabilities:', 'Reviews pull requests (e.g., 42) and matches them with requirements from a Jira or GitHub issue (e.g., 12).', 'gth pr 42 12', 'Reviews local diffs.', 'git --no-pager diff | gth review', 'Provides an interactive chat session.', 'gth chat', 'Has access to the filesystem to read and write code.', 'gth code', 'Of course, it has MCP and OAuth, so you can connect to a remote MCP such as Jira and create and edit stories like a boss.', "It also has a tiny feature that can log time against a Jira issue when it finishes reviewing a PR. This is not documented yet, but you can find the config example in the release notes or ask me in the comments (as far as I know, Jira MCP can't do that).", 'Apart from that, you can supply simple local AI tools in LangChainJS tool format, as simple as this:', 'It is very config and guidelines-driven. I have a separate config in each project, setting it up for me and providing the necessary guidelines, so the AI does not screw up because of a lack of information.Also, I have a number of non-coding projects. I have a separate one for Jira with detailed instructions on how to work with it and another for writing.', 'Why, when there is X and Y?', "Some months ago, I was looking for a CLI assistant based on LangChainJS/LangGraphJS and didn't find many. There was a factor of curiosity and other factors as well.", 'The initial intent was to build a tool into which I could pipe a diff and send this diff along with guidelines to the AI, but over time it evolved, new features were built, and potentially, this can be used as a coding agent.', 'E.g., you typegth code, tell itimplement requirements.md, so it would read the file with requirements and go coding.', "GeminiCli, ClaudeCode? They were not officially released when I started, and I didn't know they were in development.Aider, Goose? Sure, they are good and probably better options, but this would be harder to make your contributions and add features you need.", 'So what?', 'There are more features I would like to build than I have time for.Contributors are welcome.Trying it out and creating an issue, or sharing feedback in Discussions is also a contribution; a PR would be even better.'], 'paper': None}, {'author': {'name': 'YuriPanchul ', 'author_url': 'https://habr.com/en/users/YuriPanchul/'}, 'topic': ['Algorithms*', 'Machine learning*', 'FPGA*', 'Programming microcontrollers*', 'Artificial Intelligence'], 'text': ['Некоторые товарищи, например Олег Чирухин на Фейсбуке утверждают, что LLM хорошо пишет на JavaScript / TypeScript и плохо на Verilog / SystemVerilog потому что первого в мире больше. Однако у верилога есть два критических фактора, которых у JS вообще нет. В JS если программа работает долго - это просто неудобство, в Verilog-е если нарушается тайминг внутри такта (задержки в пикосекундах) или результат приходит через 5 тактов, а он ожидался через 4 - все нафиг ломается. LLM не понимает ни тайминг внутри тактов, ни тайминг по тактам (латентность).', 'Никто не будет из-за этого дурацкого LLM ставить везде hanshake не зависящий от латентности подблоков, снижать пропускную способность блока на порядок или снижать в разы тактовую частоту - скажем вместо процессора с частотой 2 GHz выкатывать на рынок процессор с частотой 20 MHz. И с производительностью по тактам 2 СoreMark / MHz вместо 12 СoreMark / MHz. И при этом большой в разы и с высоким энергопотреблением. Это как продавать автомобили со скоростью и грузоподъемостью велосипеда и весом как самосвал - такое никто не купит.', 'Тайминг внутри такта (задержки в пикосекундах) только из кода определить нельзя, нужна процедура статического анализа тайминга, который знает задержки конкретной библиотеки ASIC (LLM не умеет делать STA (static timing analysis) и не знает задержек конкретной версии библиотеки скажем на 2 нанометра low power такого-то вендора).', 'С неумением LLM понимать что происходит в каком такте все интереснее. В принципе это понять можно, но это требует довольно вдумчивого анализа конкретного кода, а LLM это не просто не умеет, а в наглую пишет "for illustration, assume the latency is 1" - типа тоном профессора "для иллюстрации, предположим латентность подблока - 1 такт". А если не предполагать? С предположением все поломается.', 'Конечно можно писать код с handshake, который не зависит от латентности, а просто ждет результата, но это принципиально усложняет дизайн, а также требует введение крупных очередей FIFO с непонятным размером.', 'Написал Олегу:', 'Тут есть два других фактора: 1. в реальных бизнес-задачах необходимо, чтобы разработчик мог понять например латентность кода подблоков - количество тактов на получение результата. LLM этого не понимает - оно из чужого кода часто и опытному разработчику не очевидно, а запустить симулятор и посмотреть это на диаграммах после симуляции LLM не может. 2. в верилоге есть составляющая которой вообще нет в программировании - таминг внутри такта в пикосекундах. Нужно чтобы схема синтезированная из кода в этот тайминг влезала. И если латентность (количество тактов) из чужого кода еще можно определить (если проанализировать цепочку присваиваний между комбинационной логикой и D-триггерами), то с таймингом вообще напряг. Хотя с таймингом у дизайнера вырабатывается интуиция, например что комбинационное умножение 4-х битных чисел в бюджет на 400 пикосекунд точно влезет, а вот комбинационное деление 32-битных точно не влезет - но все это нужно подтверждать запуском программы статического анализа тайминга, который (та-дам!!) LLM делать не может.'], 'paper': None}, {'author': {'name': 'YuriPanchul ', 'author_url': 'https://habr.com/en/users/YuriPanchul/'}, 'topic': ['FPGA*', 'Programming microcontrollers*', 'Education abroad', 'Computer hardware', 'Artificial Intelligence'], 'text': ['У меня есть коллега (не по Самсунгу, а по образовательным программам), который влюблен в ИИ. У меня есть опасения что он может использовать ИИ для написания некой инструкции, которая включает теоретическую базу SystemVerilog-а. С моей точки зрения это очень дурная идея, так как LLM не следует стандарту, а генерит то, что людям интуитивно "кажется". Для иллюстрации спросил у ChatGPT 4.0 чем отличается wire, reg и logic. Словил 3 ошибки и 2 недочета:', '1. Недочет: LLM (как и большинство людей, даже экспертов) забыл упомянуть про разницу в контексте инициализации ("wire a = b" это continuous assignment то есть "wire a; assign a = b;", а вот "logic a = b" это инициализация в момент 0, то есть "logic a; initial a = b;")', '2. Ошибка: LLM почему-то думал что "wire a = 1\'b0" несинтезируемо в Verilog, но синтезируемо в SystemVerilog.', '3. Ошибка: LLM думал, что "always_ff" можно использовать для создания D-защелки (D-latch).', '4. Ошибка: LLM думал, что "always_comb" может infer latch.', '5. Недочет: LLM забыл про "always_latch".', 'То есть если скажем преподаватель ленится читать стандарты и книги, но вздумал писать методичку с помощью ChatGPT, то его студенты жестоко пострадают (баг от (1) трудно отлаживать) и будут понимать все "приблизительно".'], 'paper': None}, {'author': {'name': 'YuriPanchul ', 'author_url': 'https://habr.com/en/users/YuriPanchul/'}, 'topic': ['Machine learning*', 'FPGA*', 'Programming microcontrollers*', 'Education abroad', 'Artificial Intelligence'], 'text': ['У меня есть знакомый энтузиаст LLM, который также изучает верилог. Я попросил его написать инструкцию к упражнению с неким сенсором, который он интегрировал. Он разумеется сбросил это на LLM, я почитал и понял, что LLM нужно запретить как распостранение Экстази и "солей" среди молодежи. Точно так же как "дизайнерские наркотики" дают ощущение счастья и достижения без труда, сгенеренная LLM документация выглядит как реальная, вот только читателю она не поможет.', 'Что нужно читателю? Картинку как подцепить сенсор к плате, временную диаграмму сигналов которые от него выходят и пару слов про проблемы, которые у него возникнут (дребезг) и как их стоит решать. Так чтобы было достаточно информации, чтобы сесть и написать код на верилоге.', 'Что выдал LLM? Сначала пять абзацев мутного словестного описания что "изменения переключателей проходят некоторую последовательность, позволяющую определить направление", с галлюцинациями что движется и что неподвижно. Потом не имеющую отношения к задаче информацию, из каких материалов делаются эти сенсоры в разных странах мира, чтобы быть дешевыми для хоббистов и образовательных учреждений. Далее про разные способы решения проблемы дребезга, в том числе способы, не имеющие отношения к данной ситуации. И наконец, куски определения пинов из QSF и XDC файлов из случайных примеров в интернете, которые не имеют отношения к описанному примеру, так как в нем во-первых эти файлы не используются (другой вендор, другой способ задания пинов), а во-вторых, в нем эта часть проекта абстрагирована (пользователю вообше это не нужно это делать).', 'То есть текст просто водит читателя за нос, не давая ему никакой полезной информации для решения проблемы. Но даже это не важно, потому что читатель этот текст читать не будет, так как учует LLM в заголовке и убедится в третьем предложении, после чего перестанет читать. Текст является иллюстрацией терминов "сделать на отцепись" и "из дерьма и палок".', 'UPD: И самое страшное: это 27 страниц вместо 1 страницы полезной инструкции, которую я ожидал. ДВАДЦАТЬ СЕМЬ СТРАНИЦ ЛАБУДЫ !!!', 'Я хочу обратно в годы, когда этого ужаса не было. Нашу цивилизацию ждут тяжелые времена. Я уже видел в ЖЖ посты агитирующие на перевод всей порноиндустрии на generative AI.'], 'paper': None}, {'author': {'name': 'YuriPanchul ', 'author_url': 'https://habr.com/en/users/YuriPanchul/'}, 'topic': ['High performance*', 'Computer hardware', 'History of IT', 'CPU', 'Electronics for beginners'], 'text': ['На ютюбе вышло видео Сергея СафоноваКак Intel создал ARM, ARM похоронил MIPS, на очереди X86?Видео хорошее, в нем нет крупных косяков, но есть крупная дыра (или я просто смотрел невнимательно и пропустил?), отсутствующая информация о ключевом событии. В нем упадок RISC-процессоров в районе 2000 года рассматривается как некая загадочная энигма, а между тем все не просто, а очень просто. Вся индустрия в конце 1990-х ждала выхода процессора Intel Itanium, которому предсказывали взрывной рост и распостранение. Всем остальным процессорам предписывалось в организованном порядке идти на кладбище истории.', 'Из-за прогнозируемого триумфа Итаниума, HP отказались от своего RISC-процессора HP-PA, который в лучшие годы занимал 40% рынка рабочих станций для автоматизации проектирования электроники. DEC забила на свой RISC-процессор Alpha, на который еще в середине 1990-х спортировали Windows NT. Silicon Graphics перестали использовать MIPS для графики для Голливуда и отделили от себя MIPS Technologies которые стали специализироваться на лицензировании процессорных ядер для встроенных устройств. IBM и даже Sun собирались перейти на Itanium.', 'Однако когда Itanium вышел, его продажи были в десятки раз ниже чем прогнозировалось. Процессор строился на архитектуре VLIW, как современный российский Эльбрус, и имел те же проблемы. В частности, на такой архитектуре, с несколькими параллельными инструкциями в одном командном слове, трудно добиться хороших бенчмарк на программах общего назначения. Эти параллельные инструкции соединяет в одно слово компилятор, и ему трудно предсказать задержки при работе с памятью, которые при промахе кэша могут быть десятки и даже пару сотен тактов (при многоуровневом кэше, особенно с многоядерностью). Обычный суперскалярный процессор в таком случае просто запускает следующие независимые от доступа к памяти инструкции (см. алгоритм Томасуло), а вот VLIW процессору приходится простаивать.', 'VLIW процессоры хороши чтобы просчитывать какую-нибудь физику, с одновременной обработкой массивов данных, но запускать на нем браузеры или Микрософт Офис - это наблюдать посредственную производительность.  Но в 1997 году, после анонса Itanium-а и до его выхода в 2001 - компании об этом не то что не знали, но думали что каток хайпа от Интела повторит каток хайпа от Микрософта по поводу Windows, и Итаниум будет везде.', 'Об этом есть известная статья Джона Дворака "Как Итаниум убил компьютерную индустрию".', 'Другое замечание: Сергея Сафонова в видео смешивает архитектуру (систему команд, видимую программисту сторону процессора) и микроархитектуру (аппаратную организацию, устройство конвейера и блоков процессорного ядра).  RISC-архитектура способствует эффективной конвейерной микроархитектуре, но это не одно и то же. См. мою заметку "Что означает информация в заметке Коммерсанта «Британия морозит «Байкал»"', 'И где можно было бы дополнить:', 'Мода на RISC возникла не просто так, а в результате анализа использования инструкций в пользовательских программах. Такое масштабное исследование провела группа профессора Джона Хеннесси в Стенфорде в 1978-1980 году.', 'История RISC-процессоров в 1980-е тесно переплетается с историей кэшей. Они стали популярны именно в 1980-е потому что скорость арифметических операций росла в те годы гораздо быстрее, чем скорость доступа к основной памяти, DRAM.Если раньше, в 1960-е годы, арифметическая операция занимала больше, чем чтение или запись из памяти, то сейчас за одну транзакцию к памяти при промахе кэша можно выполнить десятки сложений. Поэтому стало рости и количество регистров (в x86 их изначально было меньше, а 6502 в ранних Apple - вообще аккумуляторные процессоры) и стал требоваться кэш, а иначе конвейер бы простаивал.', 'На то, что индустрия отвернулась от MIPS и повернулась к ARM, повлияла и история о том, как MIPS стал судить стартап Lexra. Lexra типа нарушала патент на инструкции с невыравненным доступом к памяти. Процесс был высосан из пальца, но MIPS затянул разбирательство и у стартапа кончились деньги на юристов.'], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Abnormal programming*', 'Python*'], 'text': ["3D Interactive Rubik's Cube in Python / Matplotlib", "interactive 3D Rubik's cube simulator in python using onlymatplotlibfor all the graphics and interaction. Check out the demonstration here github.com \\ davidwhogg \\ MagicCube or follow metelegram"], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Python*', 'Programming*', 'Data visualization*'], 'text': ['We developed very fast scientific graphics using matplotlib and python>>source at my x.com/twitter'], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Python*', 'Social networks and communities'], 'text': ['Confusion with Reddit', "I've had aReddit account since 2016. I only read and posted in the Python forum (1 million subscribers!). Yesterday, I unexpectedly received ashadow ban. This means that my comments and posts are invisible to others. Essentially, it's read-only.", "I created several new accounts from different IPs and devices. It turned out that email verification is no longer required. This process takes 15 seconds. On some accounts, I verified the email, but it didn't help. Here's an example of a newly created account without email verification, and it's still active because nothing has been done on it:https://www.reddit.com/user/No-Half8140/", 'If you have the ability to receive a verification code via email likedff35fghf@hfhlltgf.com, you\'ll automatically get afree PRO versionof the account, which includes advanced statistics and other perks. However, the account remains in a "pre-ban" state.', 'Upon testing, I found that all new accounts are in this "pre-ban" state. This means you can change your avatar, read, vote, and the accounts are visible when logged out or from a private browser window.', 'However,attempting to post on your own wall (which automatically appears upon registration), write any comment in any discussion thread (even in /askReddit and /NewToReddit), create a post in any group, invite someone as a moderator to your wall, or follow someone without karmaresults in an instant shadow ban. The account becomes invisible from a private window and logged-out devices, the avatar turns red, and it cannot be changed.', 'The symptoms are the same for all IPs and languages (English, Polish, Russian). ChatGPT says that this is how it is now, and a ban is very likely. However, I see some activity in groups about Moscow and St. Petersburg, which means people somehow manage to pass this test... But how?', 'AI Reddit is going wild!'], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Abnormal programming*', 'Python*', 'Programming*', 'Data visualization*', 'Popular science'], 'text': ['Add animated own logo to your Matplotlib scientific graphics for branding purposes', '>>take source code X.com (twitter)'], 'paper': None}, {'author': {'name': 'AuToMaton ', 'author_url': 'https://habr.com/en/users/AuToMaton/'}, 'topic': ['Information Security*', 'Emacs*'], 'text': ['EMACS 30.1 вышел 24 февраля и вчера добрался до Андроид.Двумя способами - как пакет Termux и как загрузка с F-Droid. Не с play Store наверно из-за JIT.', 'Это же великий EMACS, так что это точно инфоповод к посту.', 'Но есть вопрос к знатокам- зачем EMACS на Андроид права на ВСЁ? Есть предположение: если EMACS есть операционная система по случаю редактирующая текст, то тогда ему нужны права на всё, что только может вознамериться делать любое его расширение, то есть просто на всё, но от этого менее страшно не становится.', 'Права с F-Droid:', 'android.permission.ACCEPT_HANDOVER', 'Allows the app to continue a call which was started in another app.', 'android.permission.ACCESS_ADSERVICES_AD_ID', 'android.permission.ACCESS_ADSERVICES_ATTRIBUTION', 'android.permission.ACCESS_ADSERVICES_CUSTOM_AUDIENCE', 'android.permission.ACCESS_ADSERVICES_TOPICS', 'access location in the background', 'This app can access location at any time, even while the app is not in use.', 'access approximate location only in the foreground', 'This app can get your approximate location from location services while the app is in use. Location services for your device must be turned on for the app to get location.', 'access precise location only in the foreground', 'This app can get your precise location from location services while the app is in use. Location services for your device must be turned on for the app to get location. This may increase battery usage.', 'access extra location provider commands', 'Allows the app to access extra location provider commands. This may allow the app to interfere with the operation of the GPS or other location sources.', 'read locations from your media collection', 'Allows the app to read locations from your media collection.', 'view network connections', 'Allows the app to view information about network connections such as which networks exist and are connected.', 'android.permission.ACCESS_NOTIFICATIONS', 'access Do Not Disturb', 'Allows the app to read and write Do Not Disturb configuration.', 'view Wi-Fi connections', 'Allows the app to view information about Wi-Fi networking, such as whether Wi-Fi is enabled and name of connected Wi-Fi devices.', 'recognize physical activity', 'This app can recognize your physical activity.', 'answer phone calls', 'Allows the app to answer an incoming phone call.', 'android.permission.AUTHENTICATE_ACCOUNTS', 'pair with Bluetooth devices', 'Allows the app to view the configuration of the Bluetooth on the phone, and to make and accept connections with paired devices.', 'access Bluetooth settings', 'Allows the app to configure the local Bluetooth phone, and to discover and pair with remote devices.', 'advertise to nearby Bluetooth devices', 'Allows the app to advertise to nearby Bluetooth devices', 'connect to paired Bluetooth devices', 'Allows the app to connect to paired Bluetooth devices', 'discover and pair nearby Bluetooth devices', 'Allows the app to discover and pair nearby Bluetooth devices', 'access body sensors (like heart rate monitors)', 'Allows the app to access data from sensors that monitor your physical condition, such as your heart rate.', 'Access body sensor data, like heart rate, while in the background', 'Allows the app to access body sensor data, such as heart rate, temperature, and blood oxygen percentage, while the app is in the background.', 'send sticky broadcast', 'Allows the app to send sticky broadcasts, which remain after the broadcast ends. Excessive use may make the phone slow or unstable by causing it to use too much memory.', 'directly call phone numbers', "Allows the app to call phone numbers without your intervention. This may result in unexpected charges or calls. Note that this doesn't allow the app to call emergency numbers. Malicious apps may cost you money by making calls without your confirmation.", 'take pictures and videos', 'This app can take pictures and record videos using the camera while the app is in use.', 'android.permission.CAPTURE_CONSENTLESS_BUGREPORT_ON_USERDEBUG_BUILD', 'change network connectivity', 'Allows the app to change the state of network connectivity.', 'И ещё много-много всего что не лезет в формат поста.'], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Abnormal programming*', 'Python*', 'Programming*', 'Game development*', 'Data visualization*'], 'text': ['Fantastic !Look at>> source code(or take it frommy telegram) of thePing-Pong gameprototype onMatPlotLib(scientific graphics on python) with highFPS=40.', 'Previously, in my>>article on Habr,the application of PyGame for graph plotting was reviewed, and now, conversely, we\'re creating a game on a system designed for scientific graph plotting. In the previous version, attempting to output text with high FPS resulted in significant "lag"; in the current version, this issue is resolved.', 'In the code for rendering all game elements, only MatPlotLib objects are used: tennis rackets are represented as bar charts, the ball as a scatter plot, the game field itself as a figure object from MatPlotLib, and text is also output using built-in MatPlotLib functions. For animation, the built-in MatPlotLib Animation object + update() is used. FPS=40 (forty!).', 'P.S. The yellow bar chart represents the distribution of Y-axis coordinates where the racket hits the ball. It updates with every hit of the racket on the ball.'], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Python*', '3D-graphics*', 'Graphic design*', 'Software', 'Sound'], 'text': ['Python: Using PyGame for real-time visualization of audio signals with a 44100 Hz sampling rate', 'PyGame is a popular library for developing 2D games in Python. The initial version of PyGame was presented by Pete Shinners in October 2000, and since then, the library has gradually gained popularity due to its ease of use, good documentation, and active community. Initially designed to work with early versions of Python (including Python 2), PyGame was based on the SDL 1 library. SDL is a cross-platform library in C that provides low-level access to audio devices, keyboard, mouse, and graphical functions via OpenGL, DirectX, etc.', 'The current versions 2.x fully support Python 3 (from 3.7 and above) and include a range of updates, such as improved OpenGL support, hardware acceleration, and the ability to work with vertical synchronization on monitors (VSync).', 'This article discusses an unconventional application of PyGame - the rapid display of graphs, for example, data streams with a 44100 Hz sampling rate from a sound card, which may be necessary for visualizing audio signals.', 'For such a task, the following functions and capabilities of PyGame are well-suited:', 'The main loop (typical in PyGame):', 'Read more info in my article'], 'paper': None}, {'author': {'name': 'Oksenija ', 'author_url': 'https://habr.com/en/users/Oksenija/'}, 'topic': ['Python*', 'JavaScript*', 'Data Mining*', 'LabVIEW*', 'Processing*'], 'text': ['Based on the heated discussions and criticism regarding the slow code and poorFPSin the test for displaying the sin()+noise graph usingPythonMatplotlib, improvements were made, and AI was employed to refine the code. The original article and code have undergone the following enhancements:', 'Abandoning\xa0the\xa0slow\xa0text\xa0output.', 'Utilizing\xa0FuncAnimation\xa0instead\xa0of\xa0a\xa0simple\xa0loop.', 'Implementing\xa0the\xa0magic\xa0command\xa0to\xa0connect\xa0thePyQTbackend', 'As\xa0a\xa0result,\xa0theFPSincreased\xa0from\xa012\xa0to100.\xa0For\xa0more\xa0details,', 'please\xa0refer\xa0to\xa0the\xa0original\xa0article.https://habr.com/ru/articles/878002/'], 'paper': None}, {'author': {'name': 'aymericzip ', 'author_url': 'https://habr.com/en/users/aymericzip/'}, 'topic': ['Website development*', 'JavaScript*', 'ReactJS*'], 'text': ['Заголовок: Я переписал react-query | Легковесный хук для асинхронного получения данных и кэширования в React', 'Привет всем!', 'Я разработаллегковесный React-хук, аналогичный React Query, с основными функциями: получение данных, кэширование, повторные попытки и др. Он компактнее и проще в настройке. Полный код доступен наGitHubи в npm какapi-refetch.', 'Зачем создавать собственный хук?', 'Легковесность: React Query и SWR мощные, но крупные. Мой хук идеален, когда важен размер пакета, особенно для зависимостей вродеIntlayer.', 'Настройка и оптимизация: Возможность хранения данных в локальном хранилище и управления параллельными запросами. Копируя или клонируя код, можно удалить ненужные функции, уменьшив размер бандла и повысив производительность.', 'Без провайдера: Избегаю использования Context Provider для глобального доступа, предлагая версию на базе Zustand.', 'Учебное упражнение: Понимание внутренностей кэширования и управления состоянием.', 'Создание собственного хука позволило сосредоточиться на нужных функциях, сохраняя библиотеку маленькой и понятной.', 'Функции', 'Получение данных и управление состоянием: Загрузка, ошибки, успешные данные.', 'Кэширование и хранение: Через React или Zustand, поддержка локального хранилища.', 'Повторные попытки и валидация: Настраиваемые лимиты и интервалы.', 'Активация и инвалидизация: Управление запросами в зависимости от других данных.', 'Параллельные запросы: Предотвращение дублирования запросов при монтировании нескольких компонентов.', 'Пример использования', 'Установка', 'Клонируйтерепозиторийили установите через npm:', 'Быстрый пример', 'Попробуйтеapi-refetch, сообщите об ошибках или внесите вклад. Обратная связь приветствуется!', 'GitHub:api-refetch', 'Счастливого кодинга!'], 'paper': None}, {'author': {'name': 'YuriPanchul ', 'author_url': 'https://habr.com/en/users/YuriPanchul/'}, 'topic': ['High performance*', 'FPGA*', 'Manufacture and development of electronics*', 'Finance in IT', 'CPU'], 'text': ['Как разводят венчурных капиталистов на бабки по поводу процессоров', 'Когда в СМИ публикуют статью про новый революционный процессор, но в статье нет бенчмарок, тут все понятно: статью можно игнорировать, это просто мусорный набор символов на экране. А если бенчмарки есть? Тут тоже не все так просто. Лет 10 назад был стартап, который показывал венчурным капиталистам слайды, что их революционно гибкий процессор (который динамически выделял потоки) по тактам в 3 раза быстрее чем старшее ядро ARM. Измерение было с помощью симуляции на уровне регистровых передач и в качестве бенчмарки была то ли Dhrystone, то ли CoreMark/MHz. Но они "забыли" указать на слайдах, что если синтезировать их процессорное ядро c библиотекой ASIC на том же техпроцессе, на котором и ядро ARM, против которого они конкурируют - то статический анализ тайминга покажет, что максимальная тактовая частота, которую они могут использовать - втрое меньше, чем у ARM. То есть втрое лучше по тактам умножаем на втрое хуже по частоте = никакого улучшения. Об этом факте я случайно услышал на парти - человек сказал цифру и я сложил два плюс два, то бишь умножил 3 на 1/3.', 'Также замечу что развод на бабки VC ничуть не менее аморален, чем развод на бабки пенсионеров по телефону, так как в фонды VC вкладывают в том числе и частные пенсионные фонды.'], 'paper': None}, {'author': {'name': 'zdanevich-vitaly ', 'author_url': 'https://habr.com/en/users/zdanevich-vitaly/'}, 'topic': ['Data Mining*', 'Open data*', 'Data storage*'], 'text': ['Я сохраняю историческое наследние на Wikimedia Commons, например газеты 19 века, но их очень много - буду рад если вы присоединитесь, научу как там делать.', 'Вот например страница одной старой газетыhttps://commons.wikimedia.org/wiki/Category:Minskie_eparhialnye_vedomosti', 'Исторические данные важно сохранять - многое мы уже потеряли. Где-то библиотеки выкладывают на своих сайтиках отсканированное, где-то генеалоги за свои деньги заказывают сканы и потом публикуют в Google Drive, что-то берется с archive.org. Может у вас дома есть газеты 19 века?', 'Воттут всё что я загрузил.', 'Например, одна из текущих задач -Могилевские Губернские Ведомости. В идеале их нужно не только загрузить, с правильным проставлением категорий по годам, но и вынуть тексты для другого сервисаru.wikisource.org', 'Авторское право для газет 19 века уже истекло, так что это все легально.', 'Пишите кто тоже хочет загружать на Коммонс и спасать историю, делать её доступнее для анализа людьми и машинами.'], 'paper': None}, {'author': {'name': 'zdanevich-vitaly ', 'author_url': 'https://habr.com/en/users/zdanevich-vitaly/'}, 'topic': ['Game development*'], 'text': ['About games archiving'], 'paper': None}, {'author': {'name': 'zdanevich-vitaly ', 'author_url': 'https://habr.com/en/users/zdanevich-vitaly/'}, 'topic': ['Game development*'], 'text': ['Only 13 percent of all classic games released between 1960 and 2009 are currently commercially available, according to the "Survey of the Video Game Reissue Market in the United States,"published last summerby Phil Salvadorb for the Video Game History Foundation and the Software Preservation Network', 'Fromhttps://blog.archive.org/wp-content/uploads/2024/10/Vanishing-Culture-2024.pdf'], 'paper': None}]
